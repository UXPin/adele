// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders table controls correctly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  width: 500px;
}

.c1 {
  display: block;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 14px;
  color: #323335;
  font-weight: 300;
}

.c1:first-of-type {
  width: 110px;
}

.c1:last-of-type {
  width: 70px;
}

.c2 {
  width: 200px;
}

.c3 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
  -webkit-appearance: textfield;
  width: 90%;
  max-height: 28px;
  height: 28px;
  padding: 0 7px 0 7px;
  background: none;
  border: 1px solid #777777;
  border-radius: 3px;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-weight: 300;
  color: #777777;
  font-size: 13px;
  line-height: 28px;
}

.c3[type='search'] {
  border-color: #c5c5c5;
}

.c3::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c3::-webkit-search-cancel-button {
  -webkit-appearance: none;
  width: 11px;
  height: 11px;
  background: url(test-file-stub) no-repeat center;
  background-size: contain;
}

.c3::-webkit-input-placeholder {
  text-align: left;
  font-style: italic;
}

.c3::-moz-placeholder {
  text-align: left;
  font-style: italic;
}

.c3:-ms-input-placeholder {
  text-align: left;
  font-style: italic;
}

.c3::placeholder {
  text-align: left;
  font-style: italic;
}

.c3::-webkit-input-placeholder {
  text-align: left;
  font-style: italic;
  width: 100%;
}

.c3:focus {
  border: 1px solid #006cff;
}

.c6:focus {
  outline: 0;
}

.c6 > svg {
  width: 13px;
  height: 100%;
  fill: #777777;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  cursor: pointer;
}

.c7:focus {
  outline: 0;
}

.c7 > svg {
  width: 13px;
  height: 100%;
  fill: #444;
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
  cursor: pointer;
}

.c7 > svg:hover {
  fill: #006cff;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  border: none;
  outline: none;
  padding: 0;
}

.c5:focus > span > svg {
  fill: #006cff;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<TableControls
  filterSearch={[Function]}
  moveTable={[Function]}
  scrollerInactive="left"
  updateData={[Function]}
>
  <styled.div>
    <div
      className="c0"
    >
      <styled.span>
        <span
          className="c1"
        >
          Filter categories:
        </span>
      </styled.span>
      <styled.div>
        <div
          className="c2"
        >
          <Input
            action={[Function]}
            autoComplete="off"
            color="light"
            controlled={false}
            id=""
            name="search"
            placeholder="Type to filter..."
            tab={1}
            type="search"
          >
            <styled.input
              autoComplete="off"
              color="light"
              id=""
              name="search"
              onChange={[Function]}
              placeholder="Type to filter..."
              tabIndex={1}
              type="search"
            >
              <input
                autoComplete="off"
                className="c3"
                color="light"
                id=""
                name="search"
                onChange={[Function]}
                placeholder="Type to filter..."
                tabIndex={1}
                type="search"
              />
            </styled.input>
          </Input>
        </div>
      </styled.div>
      <styled.span>
        <span
          className="c1"
        >
          See More:
        </span>
      </styled.span>
      <ArrowButtonGroup
        action={[Function]}
        scrollerInactive="left"
      >
        <styled.div>
          <div
            className="c4"
          >
            <ArrowButton
              action={[Function]}
              direction="left"
              scrollerInactive="left"
            >
              <styled.button
                direction="left"
                onClick={[Function]}
                tabIndex={1}
                title="Move Table to the left"
              >
                <button
                  className="c5"
                  direction="left"
                  onClick={[Function]}
                  tabIndex={1}
                  title="Move Table to the left"
                >
                  <Icon
                    active={false}
                    color="#444"
                    i="test-file-stub"
                    in="blue"
                    rotate={90}
                    size="s"
                  >
                    <Styled(SVGInline)
                      color="#444"
                      data-active={false}
                      in="blue"
                      rotate={90}
                      size="s"
                      svg="test-file-stub"
                    >
                      <SVGInline
                        className="c6"
                        classSuffix="-svg"
                        cleanup={Array []}
                        cleanupExceptions={Array []}
                        color="#444"
                        component="span"
                        data-active={false}
                        in="blue"
                        rotate={90}
                        size="s"
                        svg="test-file-stub"
                      >
                        <span
                          className="SVGInline c6"
                          color="#444"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "test-file-stub",
                            }
                          }
                          data-active={false}
                          in="blue"
                          rotate={90}
                          size="s"
                        />
                      </SVGInline>
                    </Styled(SVGInline)>
                  </Icon>
                </button>
              </styled.button>
            </ArrowButton>
            <ArrowButton
              action={[Function]}
              direction="right"
              scrollerInactive="left"
            >
              <styled.button
                direction="right"
                onClick={[Function]}
                tabIndex={1}
                title="Move Table to the right"
              >
                <button
                  className="c5"
                  direction="right"
                  onClick={[Function]}
                  tabIndex={1}
                  title="Move Table to the right"
                >
                  <Icon
                    active={true}
                    color="#444"
                    i="test-file-stub"
                    in="blue"
                    rotate={270}
                    size="s"
                  >
                    <Styled(SVGInline)
                      color="#444"
                      data-active={true}
                      in="blue"
                      rotate={270}
                      size="s"
                      svg="test-file-stub"
                    >
                      <SVGInline
                        className="c7"
                        classSuffix="-svg"
                        cleanup={Array []}
                        cleanupExceptions={Array []}
                        color="#444"
                        component="span"
                        data-active={true}
                        in="blue"
                        rotate={270}
                        size="s"
                        svg="test-file-stub"
                      >
                        <span
                          className="SVGInline c7"
                          color="#444"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "test-file-stub",
                            }
                          }
                          data-active={true}
                          in="blue"
                          rotate={270}
                          size="s"
                        />
                      </SVGInline>
                    </Styled(SVGInline)>
                  </Icon>
                </button>
              </styled.button>
            </ArrowButton>
          </div>
        </styled.div>
      </ArrowButtonGroup>
    </div>
  </styled.div>
</TableControls>
`;
